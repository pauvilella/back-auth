version: 1
disable_existing_loggers: false

formatters:
  local:
    class: colorlog.ColoredFormatter
    format: "%(white)s%(asctime)s.%(msecs)03d [%(name)s] %(log_color)s%(levelname)s%(reset)s %(reset)s%(message)s"
    datefmt: "%H:%M:%S"
  local_verbose:
    class: colorlog.ColoredFormatter
    format: "%(white)s%(asctime)s.%(msecs)03d [%(threadName)s:%(thread)d] [%(name)s] %(log_color)s%(levelname)s%(reset)s %(reset)s%(message)s [%(blue)sFile: %(white)s%(pathname)s] [%(blue)sFunction: %(white)s%(funcName)s()] [%(blue)sLine: %(white)s%(lineno)d]"
    datefmt: "%H:%M:%S"
  json:
    class: pythonjsonlogger.jsonlogger.JsonFormatter
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s - %(filename)s:%(lineno)d - %(process)d - %(thread)d - %(processName)s - %(threadName)s - %(module)s - %(funcName)s - %(relativeCreated)d - %(created)f - %(exc_info)s"

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: local
    stream: ext://sys.stdout

root:
  level: INFO
  handlers: [console]
  propogate: no

loggers:
  base-service:
    qualname: base-service
    level: INFO
    propogate: no
  requests:
    level: WARNING
    propagate: no
  sqlalchemy:
    level: WARNING
    propogate: no
  uvicorn:
    level: INFO
    propagate: no
  uvicorn.error:
    level: INFO
    propagate: no
  uvicorn.access:
    level: INFO
    propagate: no
  botocore:
    level: WARNING
    propagate: no
